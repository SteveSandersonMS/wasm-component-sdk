<Project Sdk="Microsoft.NET.Sdk">

    <!-- This project can't be included in the solution because its package reference can't be satisfied except when running under test -->

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>

        <InvariantGlobalization>true</InvariantGlobalization>
        <RuntimeIdentifier>wasi-wasm</RuntimeIdentifier>
        <UseAppHost>false</UseAppHost>
        <PublishTrimmed>true</PublishTrimmed>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="WasmComponent.Sdk" Version="$(PackageVersion)" />

        <!-- Just to ensure build order -->
        <ProjectReference Include="..\E2EProducer\E2EProducer.csproj" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <ItemGroup>
        <Wit Include="..\E2EProducer\producer-consumer.wit" World="consumer" />

        <!-- Ideally this would be unnecessary, either because the MSBuild tooling adds it automatically, -->
        <!-- or better still, the generated .cs code should include the full required annotations -->
        <WasmImport Include="test:producer-consumer/operations!add" />
    </ItemGroup>
    
    <!-- After build, create the composed component so it can be executed in the test -->
    <Target Name="ComposeWasmComponent" AfterTargets="ConvertToWasmComponent">
        <PropertyGroup>
            <DependencyComponent>../E2EProducer/bin/$(Configuration)/$(TargetFramework)/wasi-wasm/native/e2eproducer-component.wasm</DependencyComponent>
        </PropertyGroup>

        <MakeDir Directories="dist" />
        <Exec Command="$(WasmToolsExe) compose -o dist/composed.wasm bin/$(Configuration)/$(TargetFramework)/wasi-wasm/native/e2econsumer-component.wasm -d $(DependencyComponent)" />
    </Target>

</Project>
